plugins {
    id "groovy"
    id "java-gradle-plugin"
    id "maven-publish"
    id 'ru.vyarus.quality' version '3.4.0'
    id "com.github.ben-manes.versions" version "0.21.0"
}

def compatibilityVersion = 1.8
sourceCompatibility = compatibilityVersion
targetCompatibility = compatibilityVersion
group = 'com.github.json-validator-gradle-plugin'
version = '1.0.1'

repositories {
    mavenCentral()
    maven { url 'https://jitpack.io' }
}

dependencies {
    compile gradleApi()
    compile localGroovy()
    compile "com.github.everit-org.json-schema:org.everit.json.schema:1.11.1"
    testCompile('org.spockframework:spock-core:1.3-RC1-groovy-2.5') {
        exclude group: 'org.codehaus.groovy'
    }
}

test {
    testLogging {
        exceptionFormat = 'full'
    }
}

jar {
    manifest {
        attributes 'Implementation-Title': 'Gradle JSON Validator plugin',
                'Implementation-Version': version,
                'Built-By': System.getProperty('user.name'),
                'Built-Date': new Date(),
                'Built-JDK': System.getProperty('java.version'),
                'Built-Gradle': gradle.gradleVersion
    }
}

task sourcesJar(type: Jar) {
    archiveClassifier.set('sources')
    from sourceSets.main.allSource
}

task groovydocJar(type: Jar, dependsOn: groovydoc) {
    archiveClassifier.set('groovydoc')
    from groovydoc.destinationDir
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    archiveClassifier .set('javadoc')
    from javadoc.destinationDir
}

artifacts {
    archives sourcesJar
    archives groovydocJar
    archives javadocJar
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
            artifact sourcesJar
            artifact groovydocJar
            artifact javadocJar

            pom.withXml {
                def root = asNode()
                root.appendNode('name', 'Gradle JSON Validator plugin')
                root.appendNode('description', 'Gradle plugin that validates JSON files against JSON Schema.')
                root.appendNode('inceptionYear', '2019')

                def license = root.appendNode('licenses').appendNode('license')
                license.appendNode('name', 'The Apache Software License, Version 2.0')
                license.appendNode('url', 'http://www.apache.org/licenses/LICENSE-2.0.txt')
                license.appendNode('distribution', 'repo')
            }
        }
    }
}

gradlePlugin {
    plugins {
        "json-validator-gradle-plugin" {
            id = 'com.github.json-validator-gradle-plugin'
            implementationClass = 'com.github.jsonvalidatorgradleplugin.JsonValidatorPlugin'
        }
    }
}

wrapper {
    distributionType = Wrapper.DistributionType.ALL
}

build.dependsOn publishToMavenLocal
